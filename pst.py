opp_piece_value = {'P': 100, 'N': 305, 'B': 333, 'R': 563, 'Q': 950, 'K': 60000}
end_piece_value = {'P': 125, 'N': 280, 'B': 360, 'R': 600, 'Q': 1000, 'K': 60000}

ope_pst = {
    'P':   ( 0,  0,  0,  0,  0,  0,  0,  0,
            50, 50, 50, 50, 50, 50, 50, 50,
            10, 10, 20, 30, 30, 20, 10, 10,
             5,  5, 10, 25, 25, 10,  5,  5,
             0,  0,  0, 20, 20,  0,  0,  0,
             5, -5,-10,  0,  0,-10, -5,  5,
             5, 10, 10,-20,-20, 10, 10,  5,
             0,  0,  0,  0,  0,  0,  0,  0),

    'N':   (-50,-40,-30,-30,-30,-30,-40,-50,
            -40,-20,  0,  0,  0,  0,-20,-40,
            -30,  0, 10, 15, 15, 10,  0,-30,
            -30,  5, 15, 20, 20, 15,  5,-30,
            -30,  0, 15, 20, 20, 15,  0,-30,
            -30,  5, 10, 15, 15, 10,  5,-30,
            -40,-20,  0,  5,  5,  0,-20,-40,
            -50,-40,-30,-30,-30,-30,-40,-50),

    'B':   (-20,-10,-10,-10,-10,-10,-10,-20,
            -10,  0,  0,  0,  0,  0,  0,-10,
            -10,  0,  5, 10, 10,  5,  0,-10,
            -10,  5,  5, 10, 10,  5,  5,-10,
            -10,  0, 10, 10, 10, 10,  0,-10,
            -10, 10, 10, 10, 10, 10, 10,-10,
            -10,  5,  0,  0,  0,  0,  5,-10,
            -20,-10,-10,-10,-10,-10,-10,-20),

    'R':    ( 0,  0,  0,  0,  0,  0,  0,  0,
              5, 10, 10, 10, 10, 10, 10,  5,
             -5,  0,  0,  0,  0,  0,  0, -5,
             -5,  0,  0,  0,  0,  0,  0, -5,
             -5,  0,  0,  0,  0,  0,  0, -5,
             -5,  0,  0,  0,  0,  0,  0, -5,
             -5,  0,  0,  0,  0,  0,  0, -5,
              0,  0,  0,  5,  5,  0,  0,  0),

    'Q':   (-20,-10,-10, -5, -5,-10,-10,-20,
            -10,  0,  0,  0,  0,  0,  0,-10,
            -10,  0,  5,  5,  5,  5,  0,-10,
             -5,  0,  5,  5,  5,  5,  0, -5,
              0,  0,  5,  5,  5,  5,  0, -5,
            -10,  5,  5,  5,  5,  5,  0,-10,
            -10,  0,  5,  0,  0,  0,  0,-10,
            -20,-10,-10, -5, -5,-10,-10,-20),

    'K':   (-30,-40,-40,-50,-50,-40,-40,-30,
            -30,-40,-40,-50,-50,-40,-40,-30,
            -30,-40,-40,-50,-50,-40,-40,-30,
            -30,-40,-40,-50,-50,-40,-40,-30,
            -20,-30,-30,-40,-40,-30,-30,-20,
            -10,-20,-20,-20,-20,-20,-20,-10,
             20, 20,  0,  0,  0,  0, 20, 20,
             20, 30, 10,  0,  0, 10, 30, 20)
}

end_pst = ope_pst.copy()

end_pst['K'] = (-50,-40,-30,-20,-20,-30,-40,-50,
                -30,-20,-10,  0,  0,-10,-20,-30,
                -30,-10, 20, 30, 30, 20,-10,-30,
                -30,-10, 30, 40, 40, 30,-10,-30,
                -30,-10, 30, 40, 40, 30,-10,-30,
                -30,-10, 20, 30, 30, 20,-10,-30,
                -30,-30,  0,  0,  0,  0,-30,-30,
                -50,-30,-30,-30,-30,-30,-30,-50)

end_pst['P'] =  ( 0,  0,  0,  0,  0,  0,  0,  0,
                 80, 80, 80, 80, 80, 80, 80, 80,
                 20, 20, 30, 40, 40, 30, 20, 20,
                 10, 10, 15, 30, 30, 15, 10, 10,
                  5,  5, 10, 20, 20, 10,  5,  5,
                  0,-10,-15, -5, -5,-15,-10,  0,
                 -5, -5, -5,-20,-20, -5, -5, -5,
                  0,  0,  0,  0,  0,  0,  0,  0)


def pad_n_join(piece_value, pst):
    for k, table in pst.items():
        padrow = lambda row: (0,) + tuple(x + piece_value[k] for x in row) + (0,)
        pst[k] = sum((padrow(table[i * 8:i * 8 + 8]) for i in range(8)), ())
        pst[k] = (0,) * 20 + pst[k] + (0,) * 20
    return pst


# Pad and join both piece square tables
ope_pst = pad_n_join(opp_piece_value, ope_pst)
end_pst = pad_n_join(end_piece_value, end_pst)
